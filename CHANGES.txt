========Changes in 0.8.12=========================================================================
1, Add fluent API for HTTP client.

2, Below methods are removed from IOUtil.java:
	1) public static void parse(final File file, final int processThreadNumber, final int queueSize, final Consumer<String> lineParser)
	2) public static void parse(final Collection<File> files, final int processThreadNumber, final int queueSize, final Consumer<String> lineParser)
	3) public static void parse(final InputStream is, final int processThreadNumber, final int queueSize, final Consumer<String> lineParser)
	4) public static <T> void parse(final Iterator<T> iter, final int processThreadNumber, final int queueSize, final Consumer<T> elementParser)
The reason is these methods may be misused with:
	public static void parse(final File file, final long lineOffset, final long count, final Consumer<String> lineParser)
	public static void parse(final Collection<File> files, final long lineOffset, final long count, final Consumer<String> lineParser)
	public static void parse(final InputStream is, final long lineOffset, final long count, final Consumer<String> lineParser)
	public static void parse(final Iterator<T> iter, final long lineOffset, final long count, final Consumer<String> lineParser)

BE CAREFUL that methods fall to parse(XXX, final long lineOffset, final long count, final Consumer<String> lineParser) if the removed methods are used in your code.

3, Move SQLiteExecutor from package: com.landawn.abacus.util to package:com.landawn.abacus.android.util. The reason is because SQLiteExecutor is tied to Android.

4, Move com.landawn.abacus.android.AsyncExecutor.java/CallbackFuture.java/Util.java to package com.landawn.abacus.android.util

5, rename CallbackFuture to FutureExecutor.

6, Support cache measured by memory size with GenericKeyedObjectPool/GenericObjectPool

7, Bug fix and improvements


========Changes in 0.8.11=========================================================================
1, Build separated library for android.
2, Add utility classes to support Android: http://www.landawn.com/programming-in-android.html
3, Support stream for jdk 7, specially for android. Lambda can be supported by Retrolambda: https://github.com/evant/gradle-retrolambda
4, move methods N.streamOf(...) to com.landawn.util.stream.Stream.Of(...); 
5, rename CallableFuture to CallbackFuture.
6, enhancement and bug fix.

========Changes in 0.8.10=========================================================================
1, Add below methods to SQLiteExecutor:
	public long insert(Object entity, int conflictAlgorithm)
	 ...
	public DataSet query(String table, Map<String, Class> selectColumnNameTypeMap, Condition whereClause, String groupBy, String having, String orderBy,int offset, int count)

2, Refactoring the parse methods in JdbcUtil.java and IOUtil.java.

3, Refactoring HttpClient and Integrated with Square okhttp.

========Changes in 0.8.9=========================================================================
1, Add Neo4jExecutor.
2, Fix the log issue for Android.

=================================================================================================

========Changes in 0.8.8=========================================================================
1, Minor bug fix and improvements

=================================================================================================

========Changes in 0.8.7=========================================================================

1, rename the variable name from '_' to '__' in auto-generated entity classes by CodeGenerator due to '_' is a reserved key word since Java 8.

=================================================================================================


========Changes in 0.8.6=========================================================================

1, Fix bugs for user-defined types support in CassandraExecutor.java.

2, Rename OrderDirection to SortDirection and move it from com.landawn.abacus.condition to com.landawn.abacus.util

3, Support Android 4.4 (API Level: 19).

=================================================================================================


========Changes in 0.8.5=========================================================================

1, Support user-defined types in CassandraExecutor.java.

=================================================================================================



========Changes in 0.8.4=========================================================================

1, Changes in IOUtil.java
		a) Rename method: public static boolean delete(final File file, FileFilter filter) {...} to: public static boolean deleteFiles(final File file, FileFilter filter) {...}
		
		b) Impove the copy(...) methods.
		
2, Impovements and bug fix in CodeGenerator.java.

3, Remove NamingPolicy.IDENTITY to NamingPolicy.CAMEL_CASE

=================================================================================================



========Changes in 0.8.3=========================================================================

1, Rename Range.is(...) and Range.between(...) to Range.of(...)

2, Changes in IOUtil.java
	a) Change default charset from Charsets.UTF_8 to Charsets.DEFAULT.
	
	b) Remove method: public static boolean createFileIfNotExists(String filePath) {...} and Add method: createFileIfNotExists(File file) {...}
	
	c) Remove method: public static boolean deleteFileIfExists(String filePath) {...} and Add method: deleteIfExists(File file) {...}
	
	d) Remove method: public static void copy(File srcFile, File destDir, final boolean preserveFileDate, final FilenameFilter filter) {...} and Add method: public static void copy(File srcFile, File destDir, final boolean preserveFileDate, final FileFilter filter) {...}
	
	e) Rename method: delete(File file) to deleteAllIfExists(File file) and Add method: public static boolean delete(final File file, FileFilter filter) {...}
	
	f) Refactoring methods:
		------------------------------------------------------------------------------------------------------------------------- 
		From: 
			public static void copy(File srcFile, File destDir, final FilenameFilter filter, final boolean preserveFileDate) {...}
		To:
			public static void copy(File srcFile, File destDir, final boolean preserveFileDate, final FilenameFilter filter) {...}
		------------------------------------------------------------------------------------------------------------------------- 
		
		-------------------------------------------------------------------------------------------------------------------------
		From:
			public static List<String> list(File path, final boolean excludeDirectory, final boolean recursively) {...}
		To: 
			public static List<String> list(File path, final boolean recursively, final boolean excludeDirectory) {...}
		-------------------------------------------------------------------------------------------------------------------------
		
		-------------------------------------------------------------------------------------------------------------------------
		From:
			public static List<String> list(File path, final FileFilter filter, final boolean recursively) {...}		
		To:
			public static List<String> list(File path, final boolean recursively, final FileFilter filter) {...}
		-------------------------------------------------------------------------------------------------------------------------
		
		-------------------------------------------------------------------------------------------------------------------------
		From:
			public static List<String> listFiles(File path, final boolean excludeDirectory, final boolean recursively) {...}
		To: 
			public static List<String> listFiles(File path, final boolean recursively, final boolean excludeDirectory) {...}
		-------------------------------------------------------------------------------------------------------------------------
		
		-------------------------------------------------------------------------------------------------------------------------
		From:
			public static List<String> listFiles(File path, final FileFilter filter, final boolean recursively) {...}		
		To:
			public static List<String> listFiles(File path, final boolean recursively, final FileFilter filter) {...}
		-------------------------------------------------------------------------------------------------------------------------
		
		-------------------------------------------------------------------------------------------------------------------------
		From:
			public static List<String> listDirectories(File path, final boolean excludeDirectory, final boolean recursively) {...}
		To: 
			public static List<String> listDirectories(File path, final boolean recursively, final boolean excludeDirectory) {...}
		-------------------------------------------------------------------------------------------------------------------------
		
		-------------------------------------------------------------------------------------------------------------------------
		From:
			public static List<String> listDirectories(File path, final FileFilter filter, final boolean recursively) {...}		
		To:
			public static List<String> listDirectories(File path, final boolean recursively, final FileFilter filter) {...}
		-------------------------------------------------------------------------------------------------------------------------

=================================================================================================



========Changes in 0.8.2=========================================================================

1, Bug fix in method:
    public static void parse(final Collection<File> files, final long lineOffset, final long count, final boolean inParallel,
            final Consumer<String> lineParser) {
            ...
    }
            
	change: countForAll.intValue() to countForAll.longValue()

2, Improvements: Array.range(...) and Array.rangeClosed(...). 
	a) Decrement is supported by negative 'by'
	b) Remove range/rangeClosed for float/double due to precision issue. "3.3d - 1.1d != 2.2d". Refer to: https://en.wikipedia.org/wiki/IEEE_floating_point

=================================================================================================



========Changes in 0.8.1=========================================================================

1, Rename N.defaultValue(Class) to N.defaultValueOf(Class)

2, Rename N.difference(String, String) to N.differenceOf(String, String)

3, Rename N.difference(Object, Object) to N.differenceOf(Object, Object)

4, Extend N.forEach(...) method

5, Extend N.split(...) method

6, Extend N.copyOfRange(...) method

=================================================================================================






		